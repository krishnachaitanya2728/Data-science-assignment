# -*- coding: utf-8 -*-
"""Pandas Assignment

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YlSunTYR2GhePARWKBvIZfbF8vlWFHsc
"""

1. Create a Datatime index containing all the weekdays days of year 2019 and assign a random number to each of them in a dataframe. 
2. Given Pandas series , height = [23,42,55] and weight = [71,32,48] . Create a dataframe with height and weight as column names. 
3. How to get the items of series A not present in series B .From ser1 remove items present in ser2.
Questions on Titanic Dataset :-
4. Compute the minimum, 25th percentile, median, 75th, and maximum of age in titanic dataset
5. How to get frequency counts of unique items of a series? Calculate the frequency counts of ‘SibSp’ column in titanic Dataset
6. Keep only top 2 most frequent values as it is and replace everything else as ‘Other’ in ‘Embarked’ column of titanic dataset
7. Bin the price column in titanic data set into 5 equal groups and get counts of each bin
8. Count the number of missing values in each column?
9. Get the row number of the 5th largest value in the Age column of titanic dataset?
10. Normalize all columns in a dataframe?
11. Get the indices of items of ser2 in ser1 as a list.
12. How to convert a series of date-strings to a timeseries?
13. Get the day of month, week number, day of year and day of week from ser.
14. Compute the euclidean distance between series (points) p and q, without using a packaged formula.
Desired Output
15. How to create a TimeSeries starting ‘2000-01-01’ and 10 weekends (saturdays/sundays)
16. Import every 50th row of BostonHousing dataset as a dataframe.

#Create a Datatime index containing all the weekdays days of year 2019 and assign a random number to each of them in a dataframe. 
import pandas as pd
s = pd.date_range('2019-01-01', '2019-12-31', freq='D').to_series()
s.dt.dayofweek

#Given Pandas series , height = [23,42,55] and weight = [71,32,48] . Create a dataframe with height and weight as column names.
height = pd.Series([23,42,55]).values
weight = pd.Series([71,32,48]).values
frame = { 'height': height, 'weight': weight } 
df = pd.DataFrame(frame,index = None)
df

#How to get the items of series A not present in series B .From ser1 remove items present in ser2.
a = height - weight
a

#4. Compute the minimum, 25th percentile, median, 75th, and maximum of age in titanic dataset
from google.colab import files
files.upload()

import pandas as pd

titanic = pd.read_csv("titanic.csv")

titanic.head()

titanic['Age'].describe()

titanic['Parch'].value_counts()

titanic['Embarked'].value_counts()
result = titanic['Embarked'].value_counts()[~titanic['Embarked'].value_counts().isin(titanic['Embarked'].value_counts().value_counts().index[:1])] = 'Other'
titanic['Embarked'].value_counts()

pd.qcut(titanic['Fare'], q=5)

#Count the number of missing values in each column?

print(" \nCount total NaN at each column in a DataFrame : \n\n", 
      titanic.isnull().sum())



titanic.Age.nlargest(5).iloc[-1]

new = titanic[['Pclass', 'Age', 'SibSp','Parch','Fare']]
new.head()

#Normalize all columns in a dataframe?
def normalize(df):
    result = df.copy()
    for feature_name in df.columns:
        max_value = df[feature_name].max()
        min_value = df[feature_name].min()
        result[feature_name] = (df[feature_name] - min_value) / (max_value - min_value)
    return result

normalize(new)

def find(height, weight):
    for i in s.index:
        if s[i] == el: 
            return i
    return None

#How to convert a series of date-strings to a timeseries?
date_series = pd.Series(['01 Jan 2015', '10-02-2016', '20180307', '2014/05/06', '2016-04-12', '2019-04-06T11:20'])

df = pd.DataFrame(dict(date_given = date_series)) 
print(pd.to_datetime(date_series))
df['date_given'] = pd.to_datetime(df['date_given'])
df

df['month_of_date'] = df['date_given'].dt.month
df['year_of_date'] = df['date_given'].dt.year
df['week_of_date'] = df['date_given'].dt.week
df

# Euclidean Distance
import math
x = (1,2,3,4,5,6,7,8,9,10)
y = (10,9,8,7,6,5,4,3,2,1)
distance = math.sqrt(sum([(a - b) ** 2 for a, b in zip(x, y)]))
print("Euclidean distance from x to y: ",distance)

# How to create a TimeSeries starting ‘2000-01-01’ and 10 weekends (saturdays/sundays)

#Import every 50th row of BostonHousing dataset as a dataframe.
import pandas as pd
boston = pd.read_csv("boston_house_price.csv")
boston.iloc[::50, :]